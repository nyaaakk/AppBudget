<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet" targetNamespace="http://tempuri.org/Database1DataSet1.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet1.xsd" xmlns="http://tempuri.org/Database1DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApp1.Properties.Settings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AnneeTableAdapter" GeneratorDataComponentClassName="AnneeTableAdapter" Name="Annee" UserDataComponentName="AnneeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Annee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Annee] WHERE (([idAnnee] = @Original_idAnnee) AND ([annee] = @Original_annee))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idAnnee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idAnnee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Annee] ([idAnnee], [annee]) VALUES (@idAnnee, @annee);
SELECT idAnnee, annee FROM Annee WHERE (idAnnee = @idAnnee)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idAnnee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idAnnee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idAnnee, annee FROM dbo.Annee</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Annee] SET [idAnnee] = @idAnnee, [annee] = @annee WHERE (([idAnnee] = @Original_idAnnee) AND ([annee] = @Original_annee));
SELECT idAnnee, annee FROM Annee WHERE (idAnnee = @idAnnee)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idAnnee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idAnnee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idAnnee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idAnnee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idAnnee" DataSetColumn="idAnnee" />
              <Mapping SourceColumn="annee" DataSetColumn="annee" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ChargeTableAdapter" GeneratorDataComponentClassName="ChargeTableAdapter" Name="Charge" UserDataComponentName="ChargeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Charge" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Charge] WHERE (([idCharge] = @Original_idCharge) AND ([idDate] = @Original_idDate) AND ([valCharge] = @Original_valCharge))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idCharge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCharge" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_valCharge" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valCharge" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Charge] ([idCharge], [idDate], [valCharge]) VALUES (@idCharge, @idDate, @valCharge);
SELECT idCharge, idDate, valCharge FROM Charge WHERE (idCharge = @idCharge) AND (idDate = @idDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idCharge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCharge" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@valCharge" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valCharge" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idCharge, idDate, valCharge FROM dbo.Charge</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Charge] SET [idCharge] = @idCharge, [idDate] = @idDate, [valCharge] = @valCharge WHERE (([idCharge] = @Original_idCharge) AND ([idDate] = @Original_idDate) AND ([valCharge] = @Original_valCharge));
SELECT idCharge, idDate, valCharge FROM Charge WHERE (idCharge = @idCharge) AND (idDate = @idDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idCharge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCharge" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@valCharge" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valCharge" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idCharge" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCharge" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_valCharge" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valCharge" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idCharge" DataSetColumn="idCharge" />
              <Mapping SourceColumn="idDate" DataSetColumn="idDate" />
              <Mapping SourceColumn="valCharge" DataSetColumn="valCharge" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DateTableAdapter" GeneratorDataComponentClassName="DateTableAdapter" Name="Date" UserDataComponentName="DateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Date" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Date] WHERE (([idDate] = @Original_idDate) AND ([annee] = @Original_annee) AND ([trimestre] = @Original_trimestre))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Date] ([idDate], [annee], [trimestre]) VALUES (@idDate, @annee, @trimestre);
SELECT idDate, annee, trimestre FROM Date WHERE (idDate = @idDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idDate, annee, trimestre FROM dbo.Date</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Date] SET [idDate] = @idDate, [annee] = @annee, [trimestre] = @trimestre WHERE (([idDate] = @Original_idDate) AND ([annee] = @Original_annee) AND ([trimestre] = @Original_trimestre));
SELECT idDate, annee, trimestre FROM Date WHERE (idDate = @idDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_annee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="annee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idDate" DataSetColumn="idDate" />
              <Mapping SourceColumn="annee" DataSetColumn="annee" />
              <Mapping SourceColumn="trimestre" DataSetColumn="trimestre" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LibelleChargeTableAdapter" GeneratorDataComponentClassName="LibelleChargeTableAdapter" Name="LibelleCharge" UserDataComponentName="LibelleChargeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.LibelleCharge" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LibelleCharge] WHERE (([idLib] = @Original_idLib) AND ([lib] = @Original_lib))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LibelleCharge] ([idLib], [lib]) VALUES (@idLib, @lib);
SELECT idLib, lib FROM LibelleCharge WHERE (idLib = @idLib)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idLib, lib FROM dbo.LibelleCharge</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LibelleCharge] SET [idLib] = @idLib, [lib] = @lib WHERE (([idLib] = @Original_idLib) AND ([lib] = @Original_lib));
SELECT idLib, lib FROM LibelleCharge WHERE (idLib = @idLib)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idLib" DataSetColumn="idLib" />
              <Mapping SourceColumn="lib" DataSetColumn="lib" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LibelleProduitTableAdapter" GeneratorDataComponentClassName="LibelleProduitTableAdapter" Name="LibelleProduit" UserDataComponentName="LibelleProduitTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.LibelleProduit" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LibelleProduit] WHERE (([idLib] = @Original_idLib) AND ([lib] = @Original_lib))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LibelleProduit] ([idLib], [lib]) VALUES (@idLib, @lib);
SELECT idLib, lib FROM LibelleProduit WHERE (idLib = @idLib)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idLib, lib FROM dbo.LibelleProduit</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LibelleProduit] SET [idLib] = @idLib, [lib] = @lib WHERE (([idLib] = @Original_idLib) AND ([lib] = @Original_lib));
SELECT idLib, lib FROM LibelleProduit WHERE (idLib = @idLib)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLib" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLib" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_lib" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="lib" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idLib" DataSetColumn="idLib" />
              <Mapping SourceColumn="lib" DataSetColumn="lib" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProduitTableAdapter" GeneratorDataComponentClassName="ProduitTableAdapter" Name="Produit" UserDataComponentName="ProduitTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Produit" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Produit] WHERE (([idProduit] = @Original_idProduit) AND ([idDate] = @Original_idDate) AND ([valProduit] = @Original_valProduit))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idProduit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idProduit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_valProduit" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valProduit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Produit] ([idProduit], [idDate], [valProduit]) VALUES (@idProduit, @idDate, @valProduit);
SELECT idProduit, idDate, valProduit FROM Produit WHERE (idDate = @idDate) AND (idProduit = @idProduit)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idProduit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idProduit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@valProduit" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valProduit" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idProduit, idDate, valProduit FROM dbo.Produit</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Produit] SET [idProduit] = @idProduit, [idDate] = @idDate, [valProduit] = @valProduit WHERE (([idProduit] = @Original_idProduit) AND ([idDate] = @Original_idDate) AND ([valProduit] = @Original_valProduit));
SELECT idProduit, idDate, valProduit FROM Produit WHERE (idDate = @idDate) AND (idProduit = @idProduit)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idProduit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idProduit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@valProduit" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valProduit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idProduit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idProduit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_valProduit" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="valProduit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idProduit" DataSetColumn="idProduit" />
              <Mapping SourceColumn="idDate" DataSetColumn="idDate" />
              <Mapping SourceColumn="valProduit" DataSetColumn="valProduit" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TrimestreTableAdapter" GeneratorDataComponentClassName="TrimestreTableAdapter" Name="Trimestre" UserDataComponentName="TrimestreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Trimestre" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Trimestre] WHERE (([idTrimestre] = @Original_idTrimestre) AND ([trimestre] = @Original_trimestre))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTrimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTrimestre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Trimestre] ([idTrimestre], [trimestre]) VALUES (@idTrimestre, @trimestre);
SELECT idTrimestre, trimestre FROM Trimestre WHERE (idTrimestre = @idTrimestre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTrimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTrimestre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idTrimestre, trimestre FROM dbo.Trimestre</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Trimestre] SET [idTrimestre] = @idTrimestre, [trimestre] = @trimestre WHERE (([idTrimestre] = @Original_idTrimestre) AND ([trimestre] = @Original_trimestre));
SELECT idTrimestre, trimestre FROM Trimestre WHERE (idTrimestre = @idTrimestre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idTrimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTrimestre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idTrimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idTrimestre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_trimestre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="trimestre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idTrimestre" DataSetColumn="idTrimestre" />
              <Mapping SourceColumn="trimestre" DataSetColumn="trimestre" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="Database1DataSet" msprop:Generator_DataSetName="Database1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Annee" msprop:Generator_RowEvHandlerName="AnneeRowChangeEventHandler" msprop:Generator_RowDeletedName="AnneeRowDeleted" msprop:Generator_RowDeletingName="AnneeRowDeleting" msprop:Generator_RowEvArgName="AnneeRowChangeEvent" msprop:Generator_TablePropName="Annee" msprop:Generator_RowChangedName="AnneeRowChanged" msprop:Generator_RowChangingName="AnneeRowChanging" msprop:Generator_TableClassName="AnneeDataTable" msprop:Generator_RowClassName="AnneeRow" msprop:Generator_TableVarName="tableAnnee" msprop:Generator_UserTableName="Annee">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idAnnee" msprop:Generator_ColumnPropNameInRow="idAnnee" msprop:Generator_ColumnPropNameInTable="idAnneeColumn" msprop:Generator_ColumnVarNameInTable="columnidAnnee" msprop:Generator_UserColumnName="idAnnee" type="xs:int" />
              <xs:element name="annee" msprop:Generator_ColumnPropNameInRow="annee" msprop:Generator_ColumnPropNameInTable="anneeColumn" msprop:Generator_ColumnVarNameInTable="columnannee" msprop:Generator_UserColumnName="annee" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Charge" msprop:Generator_RowEvHandlerName="ChargeRowChangeEventHandler" msprop:Generator_RowDeletedName="ChargeRowDeleted" msprop:Generator_RowDeletingName="ChargeRowDeleting" msprop:Generator_RowEvArgName="ChargeRowChangeEvent" msprop:Generator_TablePropName="Charge" msprop:Generator_RowChangedName="ChargeRowChanged" msprop:Generator_RowChangingName="ChargeRowChanging" msprop:Generator_TableClassName="ChargeDataTable" msprop:Generator_RowClassName="ChargeRow" msprop:Generator_TableVarName="tableCharge" msprop:Generator_UserTableName="Charge">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idCharge" msprop:Generator_ColumnPropNameInRow="idCharge" msprop:Generator_ColumnPropNameInTable="idChargeColumn" msprop:Generator_ColumnVarNameInTable="columnidCharge" msprop:Generator_UserColumnName="idCharge" type="xs:int" />
              <xs:element name="idDate" msprop:Generator_ColumnPropNameInRow="idDate" msprop:Generator_ColumnPropNameInTable="idDateColumn" msprop:Generator_ColumnVarNameInTable="columnidDate" msprop:Generator_UserColumnName="idDate" type="xs:int" />
              <xs:element name="valCharge" msprop:Generator_ColumnPropNameInRow="valCharge" msprop:Generator_ColumnPropNameInTable="valChargeColumn" msprop:Generator_ColumnVarNameInTable="columnvalCharge" msprop:Generator_UserColumnName="valCharge" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Date" msprop:Generator_RowEvHandlerName="DateRowChangeEventHandler" msprop:Generator_RowDeletedName="DateRowDeleted" msprop:Generator_RowDeletingName="DateRowDeleting" msprop:Generator_RowEvArgName="DateRowChangeEvent" msprop:Generator_TablePropName="Date" msprop:Generator_RowChangedName="DateRowChanged" msprop:Generator_RowChangingName="DateRowChanging" msprop:Generator_TableClassName="DateDataTable" msprop:Generator_RowClassName="DateRow" msprop:Generator_TableVarName="tableDate" msprop:Generator_UserTableName="Date">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idDate" msprop:Generator_ColumnPropNameInRow="idDate" msprop:Generator_ColumnPropNameInTable="idDateColumn" msprop:Generator_ColumnVarNameInTable="columnidDate" msprop:Generator_UserColumnName="idDate" type="xs:int" />
              <xs:element name="annee" msprop:Generator_ColumnPropNameInRow="annee" msprop:Generator_ColumnPropNameInTable="anneeColumn" msprop:Generator_ColumnVarNameInTable="columnannee" msprop:Generator_UserColumnName="annee" type="xs:int" />
              <xs:element name="trimestre" msprop:Generator_ColumnPropNameInRow="trimestre" msprop:Generator_ColumnPropNameInTable="trimestreColumn" msprop:Generator_ColumnVarNameInTable="columntrimestre" msprop:Generator_UserColumnName="trimestre" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LibelleCharge" msprop:Generator_RowEvHandlerName="LibelleChargeRowChangeEventHandler" msprop:Generator_RowDeletedName="LibelleChargeRowDeleted" msprop:Generator_RowDeletingName="LibelleChargeRowDeleting" msprop:Generator_RowEvArgName="LibelleChargeRowChangeEvent" msprop:Generator_TablePropName="LibelleCharge" msprop:Generator_RowChangedName="LibelleChargeRowChanged" msprop:Generator_RowChangingName="LibelleChargeRowChanging" msprop:Generator_TableClassName="LibelleChargeDataTable" msprop:Generator_RowClassName="LibelleChargeRow" msprop:Generator_TableVarName="tableLibelleCharge" msprop:Generator_UserTableName="LibelleCharge">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idLib" msprop:Generator_ColumnPropNameInRow="idLib" msprop:Generator_ColumnPropNameInTable="idLibColumn" msprop:Generator_ColumnVarNameInTable="columnidLib" msprop:Generator_UserColumnName="idLib" type="xs:int" />
              <xs:element name="lib" msprop:Generator_ColumnPropNameInRow="lib" msprop:Generator_ColumnPropNameInTable="libColumn" msprop:Generator_ColumnVarNameInTable="columnlib" msprop:Generator_UserColumnName="lib">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LibelleProduit" msprop:Generator_RowEvHandlerName="LibelleProduitRowChangeEventHandler" msprop:Generator_RowDeletedName="LibelleProduitRowDeleted" msprop:Generator_RowDeletingName="LibelleProduitRowDeleting" msprop:Generator_RowEvArgName="LibelleProduitRowChangeEvent" msprop:Generator_TablePropName="LibelleProduit" msprop:Generator_RowChangedName="LibelleProduitRowChanged" msprop:Generator_RowChangingName="LibelleProduitRowChanging" msprop:Generator_TableClassName="LibelleProduitDataTable" msprop:Generator_RowClassName="LibelleProduitRow" msprop:Generator_TableVarName="tableLibelleProduit" msprop:Generator_UserTableName="LibelleProduit">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idLib" msprop:Generator_ColumnPropNameInRow="idLib" msprop:Generator_ColumnPropNameInTable="idLibColumn" msprop:Generator_ColumnVarNameInTable="columnidLib" msprop:Generator_UserColumnName="idLib" type="xs:int" />
              <xs:element name="lib" msprop:Generator_ColumnPropNameInRow="lib" msprop:Generator_ColumnPropNameInTable="libColumn" msprop:Generator_ColumnVarNameInTable="columnlib" msprop:Generator_UserColumnName="lib">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Produit" msprop:Generator_RowEvHandlerName="ProduitRowChangeEventHandler" msprop:Generator_RowDeletedName="ProduitRowDeleted" msprop:Generator_RowDeletingName="ProduitRowDeleting" msprop:Generator_RowEvArgName="ProduitRowChangeEvent" msprop:Generator_TablePropName="Produit" msprop:Generator_RowChangedName="ProduitRowChanged" msprop:Generator_RowChangingName="ProduitRowChanging" msprop:Generator_TableClassName="ProduitDataTable" msprop:Generator_RowClassName="ProduitRow" msprop:Generator_TableVarName="tableProduit" msprop:Generator_UserTableName="Produit">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idProduit" msprop:Generator_ColumnPropNameInRow="idProduit" msprop:Generator_ColumnPropNameInTable="idProduitColumn" msprop:Generator_ColumnVarNameInTable="columnidProduit" msprop:Generator_UserColumnName="idProduit" type="xs:int" />
              <xs:element name="idDate" msprop:Generator_ColumnPropNameInRow="idDate" msprop:Generator_ColumnPropNameInTable="idDateColumn" msprop:Generator_ColumnVarNameInTable="columnidDate" msprop:Generator_UserColumnName="idDate" type="xs:int" />
              <xs:element name="valProduit" msprop:Generator_ColumnPropNameInRow="valProduit" msprop:Generator_ColumnPropNameInTable="valProduitColumn" msprop:Generator_ColumnVarNameInTable="columnvalProduit" msprop:Generator_UserColumnName="valProduit" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Trimestre" msprop:Generator_RowEvHandlerName="TrimestreRowChangeEventHandler" msprop:Generator_RowDeletedName="TrimestreRowDeleted" msprop:Generator_RowDeletingName="TrimestreRowDeleting" msprop:Generator_RowEvArgName="TrimestreRowChangeEvent" msprop:Generator_TablePropName="Trimestre" msprop:Generator_RowChangedName="TrimestreRowChanged" msprop:Generator_RowChangingName="TrimestreRowChanging" msprop:Generator_TableClassName="TrimestreDataTable" msprop:Generator_RowClassName="TrimestreRow" msprop:Generator_TableVarName="tableTrimestre" msprop:Generator_UserTableName="Trimestre">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idTrimestre" msprop:Generator_ColumnPropNameInRow="idTrimestre" msprop:Generator_ColumnPropNameInTable="idTrimestreColumn" msprop:Generator_ColumnVarNameInTable="columnidTrimestre" msprop:Generator_UserColumnName="idTrimestre" type="xs:int" />
              <xs:element name="trimestre" msprop:Generator_ColumnPropNameInRow="trimestre" msprop:Generator_ColumnPropNameInTable="trimestreColumn" msprop:Generator_ColumnVarNameInTable="columntrimestre" msprop:Generator_UserColumnName="trimestre" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Annee" />
      <xs:field xpath="mstns:idAnnee" />
    </xs:unique>
    <xs:unique name="Charge_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Charge" />
      <xs:field xpath="mstns:idCharge" />
      <xs:field xpath="mstns:idDate" />
    </xs:unique>
    <xs:unique name="Date_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Date" />
      <xs:field xpath="mstns:idDate" />
    </xs:unique>
    <xs:unique name="LibelleCharge_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LibelleCharge" />
      <xs:field xpath="mstns:idLib" />
    </xs:unique>
    <xs:unique name="LibelleProduit_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LibelleProduit" />
      <xs:field xpath="mstns:idLib" />
    </xs:unique>
    <xs:unique name="Produit_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Produit" />
      <xs:field xpath="mstns:idProduit" />
      <xs:field xpath="mstns:idDate" />
    </xs:unique>
    <xs:unique name="Trimestre_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Trimestre" />
      <xs:field xpath="mstns:idTrimestre" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Date_ToAnnee" msdata:parent="Annee" msdata:child="Date" msdata:parentkey="idAnnee" msdata:childkey="annee" msprop:Generator_UserParentTable="Annee" msprop:Generator_UserChildTable="Date" msprop:Generator_RelationVarName="relationFK_Date_ToAnnee" msprop:Generator_ChildPropName="GetDateRows" msprop:Generator_ParentPropName="AnneeRow" msprop:Generator_UserRelationName="FK_Date_ToAnnee" />
      <msdata:Relationship name="FK_Date_ToTrimestre" msdata:parent="Trimestre" msdata:child="Date" msdata:parentkey="idTrimestre" msdata:childkey="trimestre" msprop:Generator_UserParentTable="Trimestre" msprop:Generator_UserChildTable="Date" msprop:Generator_RelationVarName="relationFK_Date_ToTrimestre" msprop:Generator_UserRelationName="FK_Date_ToTrimestre" msprop:Generator_ChildPropName="GetDateRows" msprop:Generator_ParentPropName="TrimestreRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>